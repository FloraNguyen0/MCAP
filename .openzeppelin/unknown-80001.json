{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4C041C5e373E110EF026Edf04e388469435A66C1",
      "txHash": "0x623f9bb1dce1e12b3750f6b2d3a17cc53ca38233fdb468722e722dbecc243e4e",
      "kind": "uups"
    },
    {
      "address": "0x6D267854B33B30432a600899FC7bacb31B08a0B6",
      "txHash": "0xd251ff681e4c759a977333870de4653f8cb69cfec27baa9ec9bae50c00a80dc4",
      "kind": "uups"
    },
    {
      "address": "0xeb0Ac5AA04FD8d080F5Fcb9d59598Abc0d20fd5A",
      "txHash": "0xb1dc96deacce782193c25e0fd106b07b2916dbd1353ff0691d1f010c8559f1a1",
      "kind": "uups"
    },
    {
      "address": "0x4B34e8dDDc01471E794205782543cb9CBe94cDb6",
      "txHash": "0x5f72757e087e810b039b4b33b8c511315e9c7a0e88ea267b995e698ab0021917",
      "kind": "uups"
    }
  ],
  "impls": {
    "0a6cd923bb4a3662fb95e1987c0d6d35dc7b4c83f1875f770e760704cf0c821a": {
      "address": "0xDe0C0De82036ba9BC6af6E717D07476357A63f8f",
      "txHash": "0x16e3ca534357fdf6274d71714185d24963f3dd86e9bf798438ea9e2997370663",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "contracts/contracts-upgradable/proxy/utils/Initializable.sol:61",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/contracts-upgradable/proxy/utils/Initializable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/contracts-upgradable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/contracts-upgradable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/contracts-upgradable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "contracts/contracts-upgradable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/contracts-upgradable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/contracts-upgradable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/contracts-upgradable/token/ERC20/ERC20Upgradeable.sol:393"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "contracts/contracts-upgradable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/contracts-upgradable/access/OwnableUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/contracts-upgradable/access/OwnableUpgradeable.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/contracts-upgradable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:210"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/contracts-upgradable/proxy/utils/UUPSUpgradeable.sol:106"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
